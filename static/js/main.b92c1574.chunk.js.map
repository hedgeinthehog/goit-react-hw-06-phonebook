{"version":3,"sources":["components/styled-components/Button.js","components/styled-components/ContentBox.js","components/styled-components/Input.js","components/styled-components/Label.js","components/styled-components/FormField.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","styles/theme.js","styles/globalStyles.js","index.js"],"names":["Button","styled","button","props","size","bg","theme","primaryTextColor","primaryBgColor","invertedTextColor","invertedBgColor","position","ContentBox","div","Input","input","accentColor","Label","label","FormField","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","updateFilter","Form","withComponent","ContactForm","state","handleChange","event","target","value","setState","handleSubmit","createNewContact","preventDefault","reset","this","onSubmit","type","pattern","title","required","onChange","React","Component","connect","dispatch","actions","contacts","filter","e","map","onClick","filterContacts","lowerCasedFilter","toLowerCase","contact","includes","items","filteredContacts","createReducer","find","alert","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","createGlobalStyle","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b92c1574.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n\r\n  ${props => {\r\n    switch (props.size) {\r\n      case 'small':\r\n        return 'height: 14px; min-width: 40px; font-size: 12px;';\r\n      case 'large':\r\n        return 'height: 30px; min-width: 140px; font-size: 20px;';\r\n      default:\r\n        return 'height: 24px; min-width: 100px; font-size: 16px;';\r\n    }\r\n  }}\r\n\r\n  ${props => {\r\n    if (props.bg === 'light') {\r\n      return `color: ${props.theme.primaryTextColor}; background-color: ${props.theme.primaryBgColor};`;\r\n    }\r\n    if (props.bg === 'dark') {\r\n      return `color: ${props.theme.invertedTextColor}; background-color: ${props.theme.invertedBgColor};`;\r\n    }\r\n  }}\r\n\r\n  ${props => {\r\n    switch (props.position) {\r\n      case 'bottom':\r\n        return 'margin-top: 5px;';\r\n      case 'right':\r\n        return 'margin-left: 10px;';\r\n      case 'left':\r\n        return 'margin-rigth: 10px;';\r\n      default:\r\n        return 'margin: 0;';\r\n    }\r\n  }}\r\n\r\n  &:hover,\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0px 0px 10px 0px\r\n    ${props => {\r\n      if (props.bg === 'light') {\r\n        return ` ${props.theme.primaryBgColor};`;\r\n      }\r\n      if (props.bg === 'dark') {\r\n        return ` ${props.theme.invertedBgColor};`;\r\n      }\r\n    }}\r\n      }};\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nconst ContentBox = styled.div`\r\n  width: 300px;\r\n  padding: 15px;\r\n  background-color: ${props => props.theme.invertedBgColor};\r\n  border-radius: 5px;\r\n  box-shadow: 0px 0px 12px -2px ${props => props.theme.invertedBgColor};\r\n`;\r\n\r\nexport default ContentBox;\r\n","import styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  margin-top: 5px;\r\n  border-radius: 5px;\r\n  border: 2px solid transparent;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border-color: ${props => props.theme.accentColor};\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\n\r\nconst Label = styled.label`\r\n  color: ${props => props.theme.invertedTextColor};\r\n`;\r\n\r\nexport default Label;\r\n","import styled from 'styled-components';\r\n\r\nconst FormField = styled.div`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport default FormField;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst updateFilter = createAction('contacts/update_filter');\r\n\r\nexport { addContact, deleteContact, updateFilter };\r\n\r\n//Redux w/o toolkit\r\n// const actions = {\r\n//   addContact: createAction('contacts/add', (name, number) => ({\r\n//     payload: {\r\n//       name,\r\n//       number,\r\n//       id: uuidv4(),\r\n//     },\r\n//   })),\r\n\r\n//   deleteContact: createAction('contacts/delete'),\r\n\r\n//   updateFilter: createAction('contacts/update_filter'),\r\n// };\r\n\r\n// export default actions;\r\n\r\n// const addContact = (name, number) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     name,\r\n//     number,\r\n//     id: uuidv4(),\r\n//   },\r\n// });\r\n// const deleteContact = id => ({\r\n//   type: types.DELETE,\r\n//   payload: id,\r\n// });\r\n// const updateFilter = value => ({\r\n//   type: types.UPDATE_FILTER,\r\n//   payload: value,\r\n// });\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../styled-components/Button';\r\nimport ContentBox from '../styled-components/ContentBox';\r\nimport Input from '../styled-components/Input';\r\nimport Label from '../styled-components/Label';\r\nimport FormField from '../styled-components/FormField';\r\nimport * as actions from '../../redux/contacts/contacts-actions';\r\n\r\nconst Form = ContentBox.withComponent('form');\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    const { name, number } = this.state;\r\n    const { createNewContact } = this.props;\r\n\r\n    event.preventDefault();\r\n\r\n    createNewContact(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <FormField>\r\n          <Label>\r\n            Name\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </Label>\r\n        </FormField>\r\n        <FormField>\r\n          <Label>\r\n            Number\r\n            <Input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </Label>\r\n        </FormField>\r\n        <Button type=\"submit\" bg=\"light\" position=\"bottom\">\r\n          Add contact\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  createNewContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  createNewContact: (name, number) =>\r\n    dispatch(actions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport ContentBox from '../styled-components/ContentBox';\r\nimport Label from '../styled-components/Label';\r\nimport Input from '../styled-components/Input';\r\nimport * as actions from '../../redux/contacts/contacts-actions';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <ContentBox>\r\n    <Label>\r\n      Find contacts by name\r\n      <Input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n    </Label>\r\n  </ContentBox>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(actions.updateFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../styled-components/Button';\r\nimport * as actions from '../../redux/contacts/contacts-actions';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name} {number}\r\n          <Button\r\n            type=\"button\"\r\n            name={id}\r\n            onClick={deleteContact}\r\n            size=\"small\"\r\n            bg=\"dark\"\r\n            position=\"right\"\r\n          >\r\n            Delete\r\n          </Button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: e => dispatch(actions.deleteContact(e.target.name)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList';\r\n\r\nconst App = ({ filteredContacts }) => {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList contacts={filteredContacts} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst filterContacts = (contacts, filter) => {\r\n  const lowerCasedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(lowerCasedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { items, filter } = state.contacts;\r\n  return { filteredContacts: filterContacts(items, filter), filter };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport * as actions from './contacts-actions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => {\r\n    const contactExists = state.find(contact => contact.name === payload.name);\r\n\r\n    if (contactExists) {\r\n      alert(`${payload.name} is already in contacts`);\r\n      return state;\r\n    }\r\n    return [payload, ...state];\r\n  },\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.updateFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\n// Redux w/o toolkit\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       const contactExists = state.find(\r\n//         contact => contact.name === payload.name,\r\n//       );\r\n\r\n//       if (contactExists) {\r\n//         alert(`${payload.name} is already in contacts`);\r\n//         return state;\r\n//       }\r\n//       return [payload, ...state];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(contact => contact.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.UPDATE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n\r\n//Redux w/o toolkit\r\n// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// const rootReducer = combineReducers({\r\n//   contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n","export const primaryBgColor = '#e3dcd2';\r\nexport const invertedBgColor = '#013328';\r\nexport const invertedTextColor = '#e3dcd2';\r\nexport const primaryTextColor = '#0f2405';\r\nexport const accentColor = '#cc8b65';\r\n","import { createGlobalStyle } from 'styled-components/macro';\r\n\r\nexport default createGlobalStyle`\r\nbody {\r\n  padding: 10px;\r\n  color: ${props => props.theme.primaryTextColor};\r\n  background-color:  ${props => props.theme.primaryBgColor};\r\n}\r\n\r\nli {\r\n  line-height: 1.8;\r\n}`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport * as theme from './styles/theme.js';\r\nimport GlobalStyle from './styles/globalStyles';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={<p>Loading...</p>} persistor={persistor}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalStyle />\r\n          <App />\r\n        </ThemeProvider>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}